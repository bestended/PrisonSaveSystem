// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using core.Data;

#nullable disable

namespace core.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231120135338_crssft")]
    partial class crssft
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("core.Model.CateringCompany", b =>
                {
                    b.Property<int>("CateringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateringId"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CateringId");

                    b.ToTable("CateringCompanies");
                });

            modelBuilder.Entity("core.Model.Guardian", b =>
                {
                    b.Property<int>("GuardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuardianId"), 1L, 1);

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("GuardianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuardianId");

                    b.HasIndex("BlockId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Guardians");
                });

            modelBuilder.Entity("core.Model.Prison", b =>
                {
                    b.Property<int>("PrisonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrisonId"), 1L, 1);

                    b.Property<int>("BlockCount")
                        .HasColumnType("int");

                    b.Property<int>("CateringId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrisonPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("PrisonId");

                    b.HasIndex("CateringId");

                    b.ToTable("Prisons");
                });

            modelBuilder.Entity("core.Model.PrisonBlock", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"), 1L, 1);

                    b.Property<string>("BlockDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.ToTable("PrisonBlocks");
                });

            modelBuilder.Entity("core.Model.Prisoner", b =>
                {
                    b.Property<int>("PrisonerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrisonerId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CrimeDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrisonWardId")
                        .HasColumnType("int");

                    b.Property<string>("PrisonerLastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrisonerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrisonersCrime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrisonerId");

                    b.HasIndex("PrisonWardId");

                    b.ToTable("Prisoners");
                });

            modelBuilder.Entity("core.Model.PrisonManager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"), 1L, 1);

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrisonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.HasIndex("PrisonId");

                    b.ToTable("PrisonManagers");
                });

            modelBuilder.Entity("core.Model.PrisonWard", b =>
                {
                    b.Property<int>("PrisonWardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrisonWardId"), 1L, 1);

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<int>("HowManyPrisonNum")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("WardBlock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardNumber")
                        .HasColumnType("int");

                    b.HasKey("PrisonWardId");

                    b.HasIndex("BlockId");

                    b.ToTable("PrisonWards");
                });

            modelBuilder.Entity("core.Model.Visitor", b =>
                {
                    b.Property<int>("VisitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorId"), 1L, 1);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrisonerId")
                        .HasColumnType("int");

                    b.Property<string>("VisitorLastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idendificationNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitorId");

                    b.HasIndex("PrisonerId");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("core.Model.Guardian", b =>
                {
                    b.HasOne("core.Model.PrisonBlock", "PrisonBlock")
                        .WithMany()
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("core.Model.PrisonManager", "PrisonManager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrisonBlock");

                    b.Navigation("PrisonManager");
                });

            modelBuilder.Entity("core.Model.Prison", b =>
                {
                    b.HasOne("core.Model.CateringCompany", "CateringCompany")
                        .WithMany()
                        .HasForeignKey("CateringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CateringCompany");
                });

            modelBuilder.Entity("core.Model.Prisoner", b =>
                {
                    b.HasOne("core.Model.PrisonWard", "PrisonWard")
                        .WithMany()
                        .HasForeignKey("PrisonWardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrisonWard");
                });

            modelBuilder.Entity("core.Model.PrisonManager", b =>
                {
                    b.HasOne("core.Model.Prison", "Prison")
                        .WithMany()
                        .HasForeignKey("PrisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prison");
                });

            modelBuilder.Entity("core.Model.PrisonWard", b =>
                {
                    b.HasOne("core.Model.PrisonBlock", "PrisonBlock")
                        .WithMany()
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrisonBlock");
                });

            modelBuilder.Entity("core.Model.Visitor", b =>
                {
                    b.HasOne("core.Model.Prisoner", "Prisoner")
                        .WithMany()
                        .HasForeignKey("PrisonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prisoner");
                });
#pragma warning restore 612, 618
        }
    }
}
